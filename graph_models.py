import numpy as np
import networkx as nx

class FlowGraph():
    
    def __init__(self, edgelist = False, adj_matrix = False, positions_dict : dict = {}, is_weighted = False) -> None:

        self.weighted = is_weighted

        if edgelist:
            self.edge_list = edgelist
            self.nx_graph = nx.from_edgelist(edgelist)
            self.vertex_number = self.nx_graph.number_of_nodes()
            self.adjacency_matrix = np.zeros((self.vertex_number, self.vertex_number))
            self._construct_adg_matrix_()
            

        else:
            self.nx_graph = nx.from_numpy_array(adj_matrix, parallel_edges=False, create_using=None)
            self.adjacency_matrix = adj_matrix

        self.vertex_number = self.nx_graph.number_of_nodes()
                
        if positions_dict:
            self.pos = positions_dict
            
        else:
            self.pos = nx.spectral_layout(self.nx_graph)

    def _construct_adg_matrix_(self):

        if self.weighted:
            for i, j in self.edge_list:
                num = 0.5 * np.random.random() + 0.5
                self.adjacency_matrix[i, j] = num
                self.adjacency_matrix[j, i] = num
        else:
            for i, j in self.edge_list:
                self.adjacency_matrix[i, j] = 1
                self.adjacency_matrix[j, i] = 1


road_graph = FlowGraph(edgelist = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6)],
positions_dict = {
0  : [-1.5, 0], 1 : [-1, 0], 2 : [-0.5, 0], 3 : [0, 0], 4 : [0.5, 0], 5 : [1, 0], 6 : [1.5, 0]
})

hexagon_graph = FlowGraph(edgelist = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (0, 5), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (1, 5), (2, 4), (2, 5), (3, 5)],
positions_dict = { 
0  : [-1.5, 0.5], 1 : [-0.5, 1.5], 2 : [0.5, 1.5], 3 : [1.5, 0.5], 4 : [0.5, -0.5], 5 : [-0.5, -0.5]
})

heptagon_graph = FlowGraph(edgelist=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (1, 3), (1, 4), (1, 5), (1, 6), (2, 4), (2, 5), (2, 6), (3, 5), (3, 6), (4, 6)],
positions_dict={
0  : [0, 1.5], 1 : [0.7, 1.2], 2 : [1, 0.5], 3 : [0.5, 0], 4 : [-0.5, 0], 5 : [-1, 0.5], 6 : [-0.7, 1.2]
})

_r_graph = FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 7), (2, 8), (2, 9), (3, 10), (3, 11), (3, 12)],
positions_dict = {
0  : [0, 0], 1 : [-0.5, 0.5], 2 : [0.5, 0.5], 3 : [0, -0.5], 4 : [-1, 0.5], 5 : [-0.75, 0.75], 6 : [-0.5, 1], 7 : [1, 0.5], 8 : [0.75, 0.75], 9 : (0.5, 1), 10 : [-0.5, -1], 11 : [0, -0.9], 12 : [0.5, -1]
})

unbalanced_r_graph = FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 7), (2, 8), (2, 9), (3, 10), (3, 11), (3, 12), (7, 13), (7, 14), (7, 15), (10, 16), (10, 17), (10, 18), (11, 19), (11, 20), (11, 21), (12, 22), (12, 23), (12, 24)],
positions_dict = {
0  : [0, 0], 1 : [-0.3, 0.3], 2 : [0.3, 0.3], 3 : [0, -0.3], 4 : [-0.8, 0.3], 5 : [-0.6, 0.6], 6 : [-0.3, 0.8], 7 : [0.8, 0.3], 8 : [0.6, 0.6], 9 : [0.3, 0.8], 10 : [-0.3, -0.5], 11 : [0, -0.4], 12 : [0.3, -0.5], 13 : [1.1, 0.6], 14 : [1.3, 0.4], 15 : [1.1, 0.1], 16 : [-0.6, -0.6], 17 : [-0.5, -0.5], 18 : [-0.6, -0.3], 19 : [-0.2, -0.6], 20 : [0, -0.5], 21 : [0.2, -0.6], 22 : [0.4, -0.4], 23 : [0.5, -0.5], 24 : [0.4, -0.6]
})

balanced_tree = FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 8), (2, 9), (3, 10), (3, 11), (4, 13), (4, 14), (4, 15), (5, 16), (5, 17), (5, 18), (6, 19), (6, 20), (6, 21), (7, 22), (7, 23), (7, 24), (8, 25), (8, 26), (8, 27), (9, 28), (9, 29), (9, 30), (10, 31), (10, 32), (10, 33), (11, 34), (11, 35), (11, 36), (12, 37), (12, 38), (12, 39), (7, 8), (8, 23), (7, 29), (3, 39), (11, 39), (10, 39), (2, 29), (29, 25)])
unbalanced_3_2_1_tree = FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 7), (2, 8), (3, 9),  (4, 11),  (5, 13), (5, 15), (6, 16), (6, 17), (6, 18), (7, 19), (7, 21), (8, 22), (8, 23), (8, 24), (9, 25), (9, 26), (9, 27), (10, 28), (10, 29), (10, 30), (11, 31), (11, 32), (11, 33), (12, 34), (12, 35), (12, 36), (13, 37), (13, 38), (13, 39), (14, 40), (14, 41), (14, 42), (15, 43), (15, 44), (15, 45), (16, 46), (16, 47), (16, 48), (17, 49), (17, 50), (17, 51), (18, 52), (18, 53), (18, 54), (19, 55), (19, 56), (19, 57), (20, 58), (20, 59), (20, 60), (21, 61), (21, 62), (21, 63), (22, 64), (22, 65), (22, 66), (23, 67), (23, 68), (23, 69), (24, 70), (24, 71), (24, 72), (25, 73), (25, 74), (25, 75), (26, 76), (26, 77), (26, 78), (27, 79), (27, 80), (27, 81), (26, 75), (27, 73), (27, 26), (27, 77), (19, 62), (19, 58), (19, 20), (20, 56), (42, 15), (42, 13), (42, 5), (11, 34), (11, 28)])

random_powerlaw_tree = FlowGraph(edgelist = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (13, 20), (14, 15), (14, 21), (15, 16), (15, 22), (16, 17), (16, 23), (16, 24), (17, 18), (17, 25), (17, 26), (17, 27), (17, 28), (17, 29), (17, 30), (17, 31), (17, 32), (17, 33), (18, 19), (18, 34), (18, 35), (18, 36), (18, 37), (18, 38), (18, 39), (18, 40), (18, 41), (18, 42), (18, 43), (18, 44), (18, 45), (18, 46), (18, 47), (18, 48), (18, 49)])
tutte_graph =  FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 26), (2, 10), (2, 11), (3, 18), (3, 19), (4, 5), (4, 33), (5, 6), (5, 29), (6, 7), (6, 27), (7, 8), (7, 14), (8, 9), (8, 38), (9, 10), (9, 37), (10, 39), (11, 12), (11, 39), (12, 13), (12, 35), (13, 14), (13, 15), (14, 34), (15, 16), (15, 22), (16, 17), (16, 44), (17, 18), (17, 43), (18, 45), (19, 20), (19, 45), (20, 21), (20, 41), (21, 22), (21, 23), (22, 40), (23, 24), (23, 27), (24, 25), (24, 32), (25, 26), (25, 31), (26, 33), (27, 28), (28, 29), (28, 32), (29, 30), (30, 31), (30, 33), (31, 32), (34, 35), (34, 38), (35, 36), (36, 37), (36, 39), (37, 38), (40, 41), (40, 44), (41, 42), (42, 43), (42, 45), (43, 44)])
chordal_cycle_graph = FlowGraph(edgelist = [(0, 46), (0, 46), (0, 1), (0, 1), (46, 45), (46, 45), (1, 2), (1, 2),  (2, 3), (2, 3), (2, 24), (2, 24), (3, 4), (3, 4), (3, 16), (3, 16), (24, 23), (24, 23), (24, 25), (24, 25), (4, 5), (4, 5), (4, 12), (4, 12), (16, 15), (16, 15), (16, 17), (16, 17), (5, 6), (5, 6), (5, 19), (5, 19), (12, 11), (12, 11), (12, 13), (12, 13), (6, 7), (6, 7), (6, 8), (6, 8), (19, 18), (19, 18), (19, 20), (19, 20), (7, 8), (7, 8), (7, 27), (7, 27), (8, 9), (8, 9), (27, 26), (27, 26), (27, 28), (27, 28), (9, 10), (9, 10), (9, 21), (9, 21), (10, 11), (10, 11), (10, 33), (10, 33), (21, 20), (21, 20), (21, 22), (21, 22), (11, 30), (11, 30), (33, 32), (33, 32), (33, 34), (33, 34), (30, 29), (30, 29), (30, 31), (30, 31), (13, 14), (13, 14), (13, 29), (13, 29), (14, 15), (14, 15), (14, 37), (14, 37), (29, 28), (29, 28), (15, 22), (15, 22), (37, 36), (37, 36), (37, 38), (37, 38), (22, 23), (22, 23), (17, 18), (17, 18), (17, 36), (17, 36), (18, 34), (18, 34), (36, 35), (36, 35), (34, 35), (34, 35), (20, 40), (20, 40), (40, 39), (40, 39), (40, 41), (40, 41), (23, 45), (23, 45), (45, 44), (45, 44), (25, 26), (25, 26), (25, 32), (25, 32), (26, 38), (26, 38), (32, 31), (32, 31), (38, 39), (38, 39), (28, 42), (28, 42), (42, 41), (42, 41), (42, 43), (42, 43), (31, 44), (31, 44), (44, 43), (44, 43), (35, 43), (35, 43), (39, 41), (39, 41)])

weighted_balanced_tree = FlowGraph(edgelist = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 8), (2, 9), (3, 10), (3, 11), (4, 13), (4, 14), (4, 15), (5, 16), (5, 17), (5, 18), (6, 19), (6, 20), (6, 21), (7, 22), (7, 23), (7, 24), (8, 25), (8, 26), (8, 27), (9, 28), (9, 29), (9, 30), (10, 31), (10, 32), (10, 33), (11, 34), (11, 35), (11, 36), (12, 37), (12, 38), (12, 39), (7, 8), (8, 23), (7, 29), (3, 39), (11, 39), (10, 39), (2, 29), (29, 25)], is_weighted=True)

large_balanced_tree = FlowGraph(edgelist=[(0, 1), (0, 2), (0, 3), (1, 4), (1, 5), (1, 6), (2, 7), (2, 8), (2, 9), (3, 10), (3, 11), (3, 12), (4, 13), (4, 14), (4, 15), (5, 16), (5, 17), (5, 18), (6, 19), (6, 20), (6, 21), (7, 22), (7, 23), (7, 24), (8, 25), (8, 26), (8, 27), (9, 28), (9, 29), (9, 30), (10, 31), (10, 32), (10, 33), (11, 34), (11, 35), (11, 36), (12, 37), (12, 38), (12, 39), (13, 40), (13, 41), (13, 42), (14, 43), (14, 44), (14, 45), (15, 46), (15, 47), (15, 48), (16, 49), (16, 50), (16, 51), (17, 52), (17, 53), (17, 54), (18, 55), (18, 56), (18, 57), (19, 58), (19, 59), (19, 60), (20, 61), (20, 62), (20, 63), (21, 64), (21, 65), (21, 66), (22, 67), (22, 68), (22, 69), (23, 70), (23, 71), (23, 72), (24, 73), (24, 74), (24, 75), (25, 76), (25, 77), (25, 78), (26, 79), (26, 80), (26, 81), (27, 82), (27, 83), (27, 84), (28, 85), (28, 86), (28, 87), (29, 88), (29, 89), (29, 90), (30, 91), (30, 92), (30, 93), (31, 94), (31, 95), (31, 96), (32, 97), (32, 98), (32, 99), (33, 100), (33, 101), (33, 102), (34, 103), (34, 104), (34, 105), (35, 106), (35, 107), (35, 108), (36, 109), (36, 110), (36, 111), (37, 112), (37, 113), (37, 114), (38, 115), (38, 116), (38, 117), (39, 118), (39, 119), (39, 120), (40, 121), (40, 122), (40, 123), (41, 124), (41, 125), (41, 126), (42, 127), (42, 128), (42, 129), (43, 130), (43, 131), (43, 132), (44, 133), (44, 134), (44, 135), (45, 136), (45, 137), (45, 138), (46, 139), (46, 140), (46, 141), (47, 142), (47, 143), (47, 144), (48, 145), (48, 146), (48, 147), (49, 148), (49, 149), (49, 150), (50, 151), (50, 152), (50, 153), (51, 154), (51, 155), (51, 156), (52, 157), (52, 158), (52, 159), (53, 160), (53, 161), (53, 162), (54, 163), (54, 164), (54, 165), (55, 166), (55, 167), (55, 168), (56, 169), (56, 170), (56, 171), (57, 172), (57, 173), (57, 174), (58, 175), (58, 176), (58, 177), (59, 178), (59, 179), (59, 180), (60, 181), (60, 182), (60, 183), (61, 184), (61, 185), (61, 186), (62, 187), (62, 188), (62, 189), (63, 190), (63, 191), (63, 192), (64, 193), (64, 194), (64, 195), (65, 196), (65, 197), (65, 198), (66, 199), (66, 200), (66, 201), (67, 202), (67, 203), (67, 204), (68, 205), (68, 206), (68, 207), (69, 208), (69, 209), (69, 210), (70, 211), (70, 212), (70, 213), (71, 214), (71, 215), (71, 216), (72, 217), (72, 218), (72, 219), (73, 220), (73, 221), (73, 222), (74, 223), (74, 224), (74, 225), (75, 226), (75, 227), (75, 228), (76, 229), (76, 230), (76, 231), (77, 232), (77, 233), (77, 234), (78, 235), (78, 236), (78, 237), (79, 238), (79, 239), (79, 240), (80, 241), (80, 242), (80, 243), (81, 244), (81, 245), (81, 246), (82, 247), (82, 248), (82, 249), (83, 250), (83, 251), (83, 252), (84, 253), (84, 254), (84, 255), (85, 256), (85, 257), (85, 258), (86, 259), (86, 260), (86, 261), (87, 262), (87, 263), (87, 264), (88, 265), (88, 266), (88, 267), (89, 268), (89, 269), (89, 270), (90, 271), (90, 272), (90, 273), (91, 274), (91, 275), (91, 276), (92, 277), (92, 278), (92, 279), (93, 280), (93, 281), (93, 282), (94, 283), (94, 284), (94, 285), (95, 286), (95, 287), (95, 288), (96, 289), (96, 290), (96, 291), (97, 292), (97, 293), (97, 294), (98, 295), (98, 296), (98, 297), (99, 298), (99, 299), (99, 300), (100, 301), (100, 302), (100, 303), (101, 304), (101, 305), (101, 306), (102, 307), (102, 308), (102, 309), (103, 310), (103, 311), (103, 312), (104, 313), (104, 314), (104, 315), (105, 316), (105, 317), (105, 318), (106, 319), (106, 320), (106, 321), (107, 322), (107, 323), (107, 324), (108, 325), (108, 326), (108, 327), (109, 328), (109, 329), (109, 330), (110, 331), (110, 332), (110, 333), (111, 334), (111, 335), (111, 336), (112, 337), (112, 338), (112, 339), (113, 340), (113, 341), (113, 342), (114, 343), (114, 344), (114, 345), (115, 346), (115, 347), (115, 348), (116, 349), (116, 350), (116, 351), (117, 352), (117, 353), (117, 354), (118, 355), (118, 356), (118, 357), (119, 358), (119, 359), (119, 360), (120, 361), (120, 362), (120, 363)])
